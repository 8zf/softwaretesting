{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 8,
    "pending": 0,
    "failures": 1,
    "start": "2017-04-14T06:55:48.160Z",
    "end": "2017-04-14T06:55:48.191Z",
    "duration": 31,
    "testsRegistered": 9,
    "passPercent": 88.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "三角形类型判断测试",
        "suites": [],
        "tests": [
          {
            "title": "类型输入错误时提醒输入错误",
            "fullTitle": "三角形类型判断测试 类型输入错误时提醒输入错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(\"excuse\", 23, 45)).to.be.equal(\"输入类型错误\");",
            "err": {},
            "isRoot": false,
            "uuid": "9728ce84-1563-4231-8c1d-b9a5a23c027b",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "输入负数时提醒输入错误",
            "fullTitle": "三角形类型判断测试 输入负数时提醒输入错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(-1, 4, 5)).to.be.equal(\"边必须为正数\");",
            "err": {},
            "isRoot": false,
            "uuid": "4b779c41-6058-4ccc-b073-2b5accecf6c7",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "三边相等应该是等边三角形",
            "fullTitle": "三角形类型判断测试 三边相等应该是等边三角形",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 3, 3)).to.be.equal(\"等边三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "e4fef591-d194-4182-bf9f-4c28f41b03ee",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "构成直角三角形时输出结果",
            "fullTitle": "三角形类型判断测试 构成直角三角形时输出结果",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 4, 5)).to.be.equal(\"直角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "83eed73f-c202-4698-98bd-15a7b83083f3",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "应该判断直角三角形类型",
            "fullTitle": "三角形类型判断测试 应该判断直角三角形类型",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(1, 1, Math.sqrt(2))).to.be.equal(\"等腰直角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "9c70dd11-f348-42f1-b117-ca111214b535",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "判断等腰三角形类型（锐角）",
            "fullTitle": "三角形类型判断测试 判断等腰三角形类型（锐角）",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 3, 4)).to.be.equal(\"等腰锐角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "d2b866bd-d959-43cc-933d-65ca7161037d",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "判断等腰三角形类型（钝角）",
            "fullTitle": "三角形类型判断测试 判断等腰三角形类型（钝角）",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(4, 4, 7)).to.be.equal(\"等腰钝角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "fd661fa7-2daa-462c-95bb-e3ea375c98ee",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "三遍不能构成三角形时输出错误",
            "fullTitle": "三角形类型判断测试 三遍不能构成三角形时输出错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(23, 45, 21)).to.be.equal(\"不能构成三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "3dfd17d2-deb1-49e5-ba5b-9b54ba6fb01b",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "只是普通的三角形",
            "fullTitle": "三角形类型判断测试 只是普通的三角形",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "expect(getTriangleType(2, 3, 4)).to.be.equal(\"普通三角形\");",
            "err": {
              "name": "AssertionError",
              "message": "expected '钝角三角形' to equal '普通三角形'",
              "showDiff": true,
              "actual": "钝角三角形",
              "expected": "普通三角形",
              "estack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)",
              "diff": "- 钝角三角形\n+ 普通三角形\n",
              "stack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)"
            },
            "isRoot": false,
            "uuid": "699b9f68-04e6-48d3-be13-5d47be062b13",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\triangle.test.js",
        "uuid": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
        "fullFile": "C:\\Users\\zhang\\Desktop\\软测\\SoftwareTesting\\triangle.test.js",
        "passes": [
          {
            "title": "类型输入错误时提醒输入错误",
            "fullTitle": "三角形类型判断测试 类型输入错误时提醒输入错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(\"excuse\", 23, 45)).to.be.equal(\"输入类型错误\");",
            "err": {},
            "isRoot": false,
            "uuid": "9728ce84-1563-4231-8c1d-b9a5a23c027b",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "输入负数时提醒输入错误",
            "fullTitle": "三角形类型判断测试 输入负数时提醒输入错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(-1, 4, 5)).to.be.equal(\"边必须为正数\");",
            "err": {},
            "isRoot": false,
            "uuid": "4b779c41-6058-4ccc-b073-2b5accecf6c7",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "三边相等应该是等边三角形",
            "fullTitle": "三角形类型判断测试 三边相等应该是等边三角形",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 3, 3)).to.be.equal(\"等边三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "e4fef591-d194-4182-bf9f-4c28f41b03ee",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "构成直角三角形时输出结果",
            "fullTitle": "三角形类型判断测试 构成直角三角形时输出结果",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 4, 5)).to.be.equal(\"直角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "83eed73f-c202-4698-98bd-15a7b83083f3",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "应该判断直角三角形类型",
            "fullTitle": "三角形类型判断测试 应该判断直角三角形类型",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(1, 1, Math.sqrt(2))).to.be.equal(\"等腰直角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "9c70dd11-f348-42f1-b117-ca111214b535",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "判断等腰三角形类型（锐角）",
            "fullTitle": "三角形类型判断测试 判断等腰三角形类型（锐角）",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(3, 3, 4)).to.be.equal(\"等腰锐角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "d2b866bd-d959-43cc-933d-65ca7161037d",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "判断等腰三角形类型（钝角）",
            "fullTitle": "三角形类型判断测试 判断等腰三角形类型（钝角）",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(4, 4, 7)).to.be.equal(\"等腰钝角三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "fd661fa7-2daa-462c-95bb-e3ea375c98ee",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          },
          {
            "title": "三遍不能构成三角形时输出错误",
            "fullTitle": "三角形类型判断测试 三遍不能构成三角形时输出错误",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(getTriangleType(23, 45, 21)).to.be.equal(\"不能构成三角形\");",
            "err": {},
            "isRoot": false,
            "uuid": "3dfd17d2-deb1-49e5-ba5b-9b54ba6fb01b",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "只是普通的三角形",
            "fullTitle": "三角形类型判断测试 只是普通的三角形",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "expect(getTriangleType(2, 3, 4)).to.be.equal(\"普通三角形\");",
            "err": {
              "name": "AssertionError",
              "message": "expected '钝角三角形' to equal '普通三角形'",
              "showDiff": true,
              "actual": "钝角三角形",
              "expected": "普通三角形",
              "estack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)",
              "diff": "- 钝角三角形\n+ 普通三角形\n",
              "stack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)"
            },
            "isRoot": false,
            "uuid": "699b9f68-04e6-48d3-be13-5d47be062b13",
            "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 9,
        "totalPasses": 8,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "85535793-b45b-47fe-8c22-7be869b2e8c5",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "类型输入错误时提醒输入错误",
      "fullTitle": "三角形类型判断测试 类型输入错误时提醒输入错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(\"excuse\", 23, 45)).to.be.equal(\"输入类型错误\");",
      "err": {},
      "isRoot": false,
      "uuid": "9728ce84-1563-4231-8c1d-b9a5a23c027b",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "输入负数时提醒输入错误",
      "fullTitle": "三角形类型判断测试 输入负数时提醒输入错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(-1, 4, 5)).to.be.equal(\"边必须为正数\");",
      "err": {},
      "isRoot": false,
      "uuid": "4b779c41-6058-4ccc-b073-2b5accecf6c7",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "三边相等应该是等边三角形",
      "fullTitle": "三角形类型判断测试 三边相等应该是等边三角形",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 3, 3)).to.be.equal(\"等边三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "e4fef591-d194-4182-bf9f-4c28f41b03ee",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "构成直角三角形时输出结果",
      "fullTitle": "三角形类型判断测试 构成直角三角形时输出结果",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 4, 5)).to.be.equal(\"直角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "83eed73f-c202-4698-98bd-15a7b83083f3",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "应该判断直角三角形类型",
      "fullTitle": "三角形类型判断测试 应该判断直角三角形类型",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(1, 1, Math.sqrt(2))).to.be.equal(\"等腰直角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "9c70dd11-f348-42f1-b117-ca111214b535",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "判断等腰三角形类型（锐角）",
      "fullTitle": "三角形类型判断测试 判断等腰三角形类型（锐角）",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 3, 4)).to.be.equal(\"等腰锐角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "d2b866bd-d959-43cc-933d-65ca7161037d",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "判断等腰三角形类型（钝角）",
      "fullTitle": "三角形类型判断测试 判断等腰三角形类型（钝角）",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(4, 4, 7)).to.be.equal(\"等腰钝角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "fd661fa7-2daa-462c-95bb-e3ea375c98ee",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "三遍不能构成三角形时输出错误",
      "fullTitle": "三角形类型判断测试 三遍不能构成三角形时输出错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(23, 45, 21)).to.be.equal(\"不能构成三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "3dfd17d2-deb1-49e5-ba5b-9b54ba6fb01b",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "只是普通的三角形",
      "fullTitle": "三角形类型判断测试 只是普通的三角形",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "expect(getTriangleType(2, 3, 4)).to.be.equal(\"普通三角形\");",
      "err": {
        "name": "AssertionError",
        "message": "expected '钝角三角形' to equal '普通三角形'",
        "showDiff": true,
        "actual": "钝角三角形",
        "expected": "普通三角形",
        "estack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)",
        "diff": "- 钝角三角形\n+ 普通三角形\n",
        "stack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)"
      },
      "isRoot": false,
      "uuid": "699b9f68-04e6-48d3-be13-5d47be062b13",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "类型输入错误时提醒输入错误",
      "fullTitle": "三角形类型判断测试 类型输入错误时提醒输入错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(\"excuse\", 23, 45)).to.be.equal(\"输入类型错误\");",
      "err": {},
      "isRoot": false,
      "uuid": "9728ce84-1563-4231-8c1d-b9a5a23c027b",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "输入负数时提醒输入错误",
      "fullTitle": "三角形类型判断测试 输入负数时提醒输入错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(-1, 4, 5)).to.be.equal(\"边必须为正数\");",
      "err": {},
      "isRoot": false,
      "uuid": "4b779c41-6058-4ccc-b073-2b5accecf6c7",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "三边相等应该是等边三角形",
      "fullTitle": "三角形类型判断测试 三边相等应该是等边三角形",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 3, 3)).to.be.equal(\"等边三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "e4fef591-d194-4182-bf9f-4c28f41b03ee",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "构成直角三角形时输出结果",
      "fullTitle": "三角形类型判断测试 构成直角三角形时输出结果",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 4, 5)).to.be.equal(\"直角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "83eed73f-c202-4698-98bd-15a7b83083f3",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "应该判断直角三角形类型",
      "fullTitle": "三角形类型判断测试 应该判断直角三角形类型",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(1, 1, Math.sqrt(2))).to.be.equal(\"等腰直角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "9c70dd11-f348-42f1-b117-ca111214b535",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "判断等腰三角形类型（锐角）",
      "fullTitle": "三角形类型判断测试 判断等腰三角形类型（锐角）",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(3, 3, 4)).to.be.equal(\"等腰锐角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "d2b866bd-d959-43cc-933d-65ca7161037d",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "判断等腰三角形类型（钝角）",
      "fullTitle": "三角形类型判断测试 判断等腰三角形类型（钝角）",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(4, 4, 7)).to.be.equal(\"等腰钝角三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "fd661fa7-2daa-462c-95bb-e3ea375c98ee",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    },
    {
      "title": "三遍不能构成三角形时输出错误",
      "fullTitle": "三角形类型判断测试 三遍不能构成三角形时输出错误",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(getTriangleType(23, 45, 21)).to.be.equal(\"不能构成三角形\");",
      "err": {},
      "isRoot": false,
      "uuid": "3dfd17d2-deb1-49e5-ba5b-9b54ba6fb01b",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "只是普通的三角形",
      "fullTitle": "三角形类型判断测试 只是普通的三角形",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "expect(getTriangleType(2, 3, 4)).to.be.equal(\"普通三角形\");",
      "err": {
        "name": "AssertionError",
        "message": "expected '钝角三角形' to equal '普通三角形'",
        "showDiff": true,
        "actual": "钝角三角形",
        "expected": "普通三角形",
        "estack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)",
        "diff": "- 钝角三角形\n+ 普通三角形\n",
        "stack": "AssertionError: expected '钝角三角形' to equal '普通三角形'\n    at Context.<anonymous> (triangle.test.js:30:42)\n    at callFn (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:345:21)\n    at Test.Runnable.run (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runnable.js:337:7)\n    at Runner.runTest (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:444:10)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:550:12\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:361:14)\n    at D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:371:7\n    at next (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:295:14)\n    at Immediate._onImmediate (D:\\nodejs\\node_modules\\.mocha_npminstall\\mocha\\3.2.0\\mocha\\lib\\runner.js:339:5)"
      },
      "isRoot": false,
      "uuid": "699b9f68-04e6-48d3-be13-5d47be062b13",
      "parentUUID": "2cb7f37d-dddf-4c74-96e4-fed0eb0680f9",
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}